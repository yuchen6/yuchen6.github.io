<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Debian9开启自带的bbr加速</title>
      <link href="posts/2021/open-debian-bbr.html"/>
      <url>posts/2021/open-debian-bbr.html</url>
      
        <content type="html"><![CDATA[<p>修改系统变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>保存生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>执行检查是否生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure><p>检测bbr是否已开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>有结果说明已经开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp_bbr                20480  1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Debian </tag>
            
            <tag> bbr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的简单安装与配置</title>
      <link href="posts/2021/install-hexo.html"/>
      <url>posts/2021/install-hexo.html</url>
      
        <content type="html"><![CDATA[<h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><p><strong>安装git</strong><br>去<a href="https://git-scm.com/">官网</a>下载安装或者<a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝镜像</a>下载git安装包<br> <strong>安装node.js</strong><br>去<a href="https://nodejs.org/en/">node官网</a>下载安装或者<a href="https://npm.taobao.org/mirrors/node">淘宝镜像</a>下载安装</p><span id="more"></span><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>安装hexo的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="生成blog"><a href="#生成blog" class="headerlink" title="生成blog"></a>生成blog</h1><p>首先新建一个文件夹，位置名字随意，然后cd到这个文件夹下，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>启动本地服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server  <span class="comment">#或者简写成hexo s</span></span><br></pre></td></tr></table></figure><p>打开浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a> 就可以本地访问博客</p><h1 id="部署到github-pages"><a href="#部署到github-pages" class="headerlink" title="部署到github pages"></a>部署到github pages</h1><h2 id="ssh配置"><a href="#ssh配置" class="headerlink" title="ssh配置"></a>ssh配置</h2><h3 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your email&quot;</span></span><br></pre></td></tr></table></figure><p>换成自己的邮箱<br>开始会让你输入保存的位置，默认保存在C:\Users\username.ssh\下<br>然后会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入</p><h3 id="添加ssh-key到GitHub"><a href="#添加ssh-key到GitHub" class="headerlink" title="添加ssh key到GitHub"></a>添加ssh key到GitHub</h3><p>打开C:\Users\username.ssh\id_rsa.pub，此文件里面内容为刚才生成的密钥，准确的复制这个文件的内容，粘贴到<a href="https://github.com/settings/ssh">https://github.com/settings/ssh</a> 的new SSH key中<br>输入下面的命令查看是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>中间的提示输入yes，最后看到下面的内容说明配置成功<br>You’ve successfully authenticated, but GitHub does not provide shell access.</p><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>进入blog目录下,编辑config.yml，找到Deployment，按照下面修改，your_username换成你的github用户名，注意冒号后面有一空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:your_username/your_username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="提交到GitHub-pages"><a href="#提交到GitHub-pages" class="headerlink" title="提交到GitHub pages"></a>提交到GitHub pages</h2><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate   <span class="comment">#或者简写成hexo g</span></span><br></pre></td></tr></table></figure><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy   <span class="comment">#或者简写成hexo d</span></span><br></pre></td></tr></table></figure><p>若上面操作失败，则需要提前安装一个扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>之后在浏览器输入 <a href="https://your_username.github.io/">https://your_username.github.io</a> 就可以看到你的博客了</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
